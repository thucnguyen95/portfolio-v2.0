[h2]Assignment[/h2]
[p]This assignment introduces more UI widgets and layouts. This includes using fragments to navigate from one view to another instead of only from activity to activity. This also reviews Intents to call other Activities as well as handling the keyboard and permanent storage of data. Different layouts for landscape and portrait views aren't needed in this assignment.[/p]
[br]

[h4]Personal Information Activity[/h4]
[p]The first or main activity collects the basic information about a person. This activityâ€™s view will look like a basic form. The information we will collect is:[/p]
[list]
    [*]First (given) name[/*]
    [*]Family (last) name[/*]
    [*]Email[/*]
    [*]Phone[/*]
    [*]Major[/*]
[/list]
[br]

[p]For each of the first five items (first name, last name, age, email and phone) use a text field to allow the user to enter the data. In each text field the appropriate keyboard needs to be used. The keyboard should not hide the text field the user is entering. All items need a label indicating what information they contain (first name, last name, etc). All items are on a separate line.[/p]
[br]

[p]To select a major the user needs to go to a second activity.[/p]
[br]

[p]Finally there is a done button. When the done button is pressed the user information is saved. When the app is killed and restarted the saved data is displayed in this activity.[/p]
[br]

[h4]Major Selection[/h4]
[p]To select a major the user is shown a second activity. When this activity is shown the user sees a list of advanced degrees offered by SDSU. The list is given below. The list is shown using a list fragment. When the user selects one of the advanced degrees, say Masters of Science, they are then shown a list of all the majors in that advanced degree. The list for each advanced degree is given below. The user can select a major in that list. When they are done selecting the major bring them back to the Personal Information Activity, with the selected major shown. For example MS Computer Science or Ph.D. Biology.[/p]
[br]

[p]When the user selects an advanced degree type, say Master of Arts, they may not see the major they are looking for. So they will want to go back to the list of advanced degree type to try again.[/p]
[br]

[p]The user needs to be able to cancel the selection of a major.[/p]
[br]

[p]When you create your project set the minimum required SDK to API 19 (Android 4.4 KitKat)[/p]
[br]

[h4]SDSU Advanced Degrees[/h4]
<ol>
    [*]Doctor of Philosophy (Ph.D.)[/*]
    [*]Doctor of Education (Ed.D.)[/*]
    [*]Master of Arts (MA)[/*]
    [*]Master of Science (MS)[/*]
    [*]Master of Fine Arts (MFA)[/*]
</ol>
[br]

[h4]Professional Master's Degrees[/h4]

[p](1) Doctor of Philosophy (Ph.D.)[/p]
[list]
    [*]Bioengineering[/*]
    [*]Biology[/*]
    [*]Chemistry[/*]
    [*]Clinical Psychology[/*]
    [*]Computational Science[/*]
    [*]Ecology[/*]
    [*]Education[/*]
    [*]Engineering/Bioengineering[/*]
    [*]Engineering/Electrical and Computer[/*]
    [*]Engineering/Mechanical and Aerospace[/*]
    [*]Engineering/Structural[/*]
    [*]Evolutionary Biology[/*]
    [*]Geography[/*]
    [*]Geophysics[/*]
    [*]Language and Communcative Disorders[/*]
    [*]Mathematics and Science Education[/*]
    [*]Public Health[/*]
[/list]
[br]

[p](2) Doctor of Education (Ed.D.)[/p]
[list]
    [*]Educational Leadership/Pre K-12[/*]
    [*]Educational Leadership/Post Secondary Community College[/*]
[/list]
[br]

[p](3) Master of Arts (MA)[/p]
[list]
    [*]Anthropology[/*]
    [*]Art[/*]
    [*]Biology[/*]
    [*]Chemistry[/*]
    [*]Chicana and Chicano Studies[/*]
    [*]Communication[/*]
    [*]Speech, Language and Hearing Sciences[/*]
    [*]Economics[/*]
    [*]Education[/*]
    [*]English[/*]
    [*]French[/*]
    [*]Geography[/*]
    [*]History[/*]
    [*]Interdisciplinary Studies[/*]
    [*]Journalism and Media Studies[/*]
    [*]Latin American Studies[/*]
    [*]Liberal Arts and Sciences[/*]
    [*]Linguistics[/*]
    [*]Mathematics[/*]
    [*]Music[/*]
    [*]Philosophy[/*]
    [*]Physics[/*]
    [*]Political Science[/*]
    [*]Psychology[/*]
    [*]Rhetoric and Writing Studies[/*]
    [*]Sociology[/*]
    [*]Spanish[/*]
    [*]Television, Film, and New Media Production[/*]
    [*]Theatre Arts[/*]
    [*]Women's Studies[/*]
[/list]
[br]

[p](4) Master of Science (MS)[/p]
[list]
    [*]Accountancy[/*]
    [*]Aerospace Engineering[/*]
    [*]Applied Mathematics[/*]
    [*]Astronomy[/*]
    [*]Bioengineering[/*]
    [*]Biology[/*]
    [*]Bioinformatics and Medical Informatics[/*]
    [*]Biomedical Quality Systems[/*]
    [*]Business Administration[/*]
    [*]Chemistry[/*]
    [*]Child Development[/*]
    [*]Civil Engineering[/*]
    [*]Computational Science[/*]
    [*]Computer Science[/*]
    [*]Counseling[/*]
    [*]Criminal Justice and Criminology[/*]
    [*]Electrical Engineering[/*]
    [*]Exercise Physiology[/*]
    [*]Geography[/*]
    [*]Geological Sciences[/*]
    [*]Gerontology[/*]
    [*]Homeland Security[/*]
    [*]Hospitality and Tourism Management[/*]
    [*]Information Systems[/*]
    [*]Interdisciplinary Studies[/*]
    [*]Kinesiology[/*]
    [*]Mechanical Engineering[/*]
    [*]Medical Physics[/*]
    [*]Microbiology[/*]
    [*]Nursing[/*]
    [*]Nutritional Sciences[/*]
    [*]Physics[/*]
    [*]Psychology[/*]
    [*]Public Health[/*]
    [*]Regulatory Affairs[/*]
    [*]Rehabilitation Counseling[/*]
    [*]Statistics[/*]
[/list]
[br]

[p]Master of Fine Arts (MFA)[/p]
[list]
    [*]Art[/*]
    [*]Creative Writing[/*]
    [*]Design and Technical Theatre[/*]
    [*]Musical Theatre[/*]
    [*]Theatre Arts[/*]
[/list]

[h2]Implementation Details[/h2]
[p]There are two activities for this assignment with the first displaying text fields to enter the user's personal information and the second allowing the user to choose a degree and major. In the first activity, a textview was used to display the degree and major that the user selected. There are three buttons - one that navigates the user to the activity to choose a degree and major, another to delete the degree and major chosen, and a done button to save the information.[/p]
[br]

[h3]Personal Information Activity[/h3]
[p]In order to save the data to a file, the file must be written to using an output stream. Likewise, in order to read the saved data into memory, the file must be read using an input stream. It was easier to serialize the data manually using the [b]'|'[/b] separator before saving it to the file.[/p]
[br]

[list]
    [*][color=#800000]restoreData()[/color] - calls readSavedFile() helper method which will return the serialized string of data, and then splits the string into an array. For each element in the array, the text for each text field is set appropriately.[/*]
    [br]
    [*][color=#800000]saveData()[/color] - calls writeSavedFile() helper method after first manuallly serializing the data of each text field using the '|' separator.[/*]
    [br]
    [*][color=#800000]readSavedFile()[/color] - opens the [color=#00796B]savedPersonalInformation.txt[/color] file using a [color=#4169e1]BufferedInputStream[/color] which will read the data of bytes. The file is closed and the string returned.[/*]
    [br]
    [*][color=#800000]writeSavedFile()[/color] - saves the serialized data by writing to the [color=#00796B]savedPersonalInformation.txt[/color] file if it exists, or creates a new file of that name if it doesn't. Uses a [color=#4169e1]BufferedOutputStream[/color] to write the byte data.[/*]
[/list]
[br]

[p]Not only does the data have to persist even after the application is killed, the state and data should be temporarily saved in onSaveInstanceState() and onRestoreInstanceState().[/p]
[br]

[list]
    [*][color=#800000]onRestoreInstanceState()[/color] - checks if there is an instance state object or returns otherwise, then attempts to retrieve the data as an array of strings. Each text field will have its text set appropriately.[/*]
    [br]
    [*][color=#800000]onSaveInstanceState()[/color] - the text of each text field is stored in an array of strings and placed in the outState bundle.[/*]
[/list]
[br]

[p]Clicking 'Choose Major' navigates the user to the activity, but the activity started expects a result. So in [color=#800000]onActivityResult()[/color], if the request code equates to the same code sent and the result code is OK, then the textview's text is set to the data sent back to this activity.[/p]
[br]

[h3]Choose Major Activity[/h3]
[p]An instance of the fragment is kept as a property so that the current list data that is shown in the list view corresponds to the correct information (list of degrees or list of majors).[/p]
[br]

[list]
    [*][color=#800000]onCreate()[/color] - instantiates a new fragment, sets the title of the activity to "Choose Degree", and sets currentListData to [color=#4169e1]ADVANCED_DEGREE_LIST[/color], which is an enum constant (the enum type is declared in ChooseMajorFragment).[/*]
    [br]
    [*][color=#800000]onBackPressed()[/color] - if currentListData is [color=#4169e1]ADVANCED_DEGREE_LIST[/color], or the data currently pertains to the list of degrees, then clicking on the back button results in the button's default action of killing the current activity. If currentListData is [color=#4169e1]MAJOR_LIST[/color], then the back button calls refreshDegreeList() from the fragment, which refreshes the list view to show the list of degrees.[/*]
    [br]
[/list]
[br]

[p]Within [color=#4169e1]ChooseMajorFragment[/color], the [color=#4169e1]MajorSelectedListener[/color] interface is defined for this activity to implement.[/p]
[list]
    [*][color=#800000]fragmentChanged()[/color] - fires when the user selected an item of the list view in the fragment. Sets the title of the activity to "Choose Major".[/*]
    [br]
    [*][color=#800000]majorSelected()[/color] - fires when a major is selected. The string is placed as an extra to the intent with the result code as RESULT_OK, and then finish() is called to kill the activity.[/*]
[/list]
[br]

[h4]Choose Major Fragment[/h4]
[p]This fragment declares the constants for the [color=#4169e1]ListData[/color] enum as well as the interface to be implemented by its listeners. The two functions to be implemented are fragmentChanged() and majorSelected(). The [color=#4169e1]listOfDegrees[/color] only need to be instantiated once after reading from the [color=#00796B]advanced_degrees.txt[/color] file whereas the [color=#4169e1]listInListView[/color] is subject to change depending on what degree the user selected.[/p]
[br]

[list]
    [*][color=#800000]onActivityCreated()[/color] - calls readDegreesFile() before setting the list of degrees to the ArrayAdapter, which will be set to the list view.[/*]
    [br]
    [*][color=#800000]readDegreesFile()[/color] - opens [color=#00796B]advanced_degrees.txt[/color] using an InputStream and reads in each line as an element for the arraylist. Regardless of whether or not an exception is thrown, the file is closed.[/*]
    [br]
    [*][color=#800000]readMajorsFile()[/color] - called when the user clicks on an advanced degree from the list view. The file matching the degree name is opened and each line is read and added to the array adapter after the adapter is cleared. [color=#4169e1]notifyDataSetChanged()[/color] is called so that the observers know that the underlying data has changed.[/*]
    [br]
    [*][color=#800000]returnAbbreviation()[/color] - the abbreviated form of the degrees is used as part of the text that displays both the degree and major. The abbreviation resides within the parentheses of each degree listing, so the substring method is used to grab it.[/*]
    [br]
    [*][color=#800000]refreshDegreeList()[/color] - called when the user taps the back button and the current list being shown is the list of majors. The list is refreshed to show the list of degrees.[/*]
    [br]
    [*][color=#800000]onItemClick()[/color] - depending on the value of [color=#4169e1]currentListData[/color] (whether or not the list of degrees or list of majors is currently displayed), either the selected degree will be used to open the majors file, or the major that was selected will be sent back as an argument to classes implementing the [color=#4169e1]MajorSelectedListener[/color] interface.[/*]
[/list]
[br]

[p]The following is an example of the personal information form filled out.[/p]
[br]
<div class="mobile-image-wrapper-single">
    [img]/projectdetailimages/cs64601_project2_preview.png[/img]
</div>
[br]

<div class="mobile-image-wrapper-double">
    <div>
        [p]An example of choosing a degree and a major.[/p]
        [img]/projectdetailimages/cs64601_project2_choosemajor.gif[/img]
    </div>
    <div>
        [p]An example of clicking 'Done' to save and persist the data, killing the app, and launching the app again.[/p]
        [img]/projectdetailimages/cs64601_project2_persistence.gif[/img]
    </div>
</div>
