[h2]Description[/h2]
[p]Fulgent Genetics is a genomic testing company that focuses on providing sequencing and diagnostic testing results to patients and institutions. The services they offer include patient care and testing in oncology, pathology, infectious and rare diseases, and more.[/p]
[br]
[p]The team I worked under was called [b][color=#664C90]FLIMS[/color][/b], which was the primary management system, as a Solutions Software Engineer and my responsibilities were diverse: from fixing small bugs to designing and implementing an integration for a new product line or service. This meant that I had to wear many different hats in order to fulfill these responsibiltiies.[/p]
[br]
[p][b]NOTE 1[/b]: I will not get into too much detail about the company, the products, and the work that was done or was planned to do. I will only briefly go over the experiences that I had and what I contributed to without revealing too much of the internal system.[/p]
[p][b]NOTE 2[/b]: Links may or may not work[/p]
[br]

[h2]The Tech Stack[/h2]
[list]
    [*]Node.js and Express.js[/*]
    [*]Vue.js[/*]
    [*]MySQL, SQLite, Oracle SQL Developer[/*]
    [*]HTML, CSS, Javascript[/*]
    [*]RabbitMQ[/*]
    [*]PM2[/*]
    [*]Project management resources: Jira, Git, Bitbucket[/*]
[/list]
[br]

[h2]Project Experiences[/h2]
[p] I will dive into some of the tasks I completed while employed there that I found to be either pivotal or a good learning experience:[/p]
[br]
[p](1) Sunburst[/p]
[p](2) BTS[/p]
[p](3) OpenArray[/p]
[p](4) Regression Testing System[/p]
[br]

[h3][b]Sunburst[/b][/h3]
[p]Sunburst is Fulgent's push for commercializing the internal software system that has already been established on site. It is the very system that allows the company to sell its software as a service to other companies. It is also a suite or collection of enterprise applications., with multiple departments working on different applications within the suite. The application that the team I worked under focused on was called [b][color=##4169e1]Curation Cloud[/color][/b].[/p]
[br]

[p]In order to understand what I was dealing with, I had many meetings and discussions with my supervisor, team leads, and employees from different departments. Under my supervisor, I helped design the data flow, components, and connectors of and between subsystems within the application. This part of the application (without revealing too much) was called the [b][color=##4169e1]Case Analysis Tracking[/color][/b] system, and all it was was a system that moved analyses through 4 major subsytems, changing its state, fetching files, writing to disks and databases, fetching and saving annotations, and performing other computations and classifications. Out of these 4 subsystems, I wrote a majority of the code for 2 of them and provided a working skeleton for the analyses to advance through the subsystems. There were a few changes to the design by the time I left the company, but the core architecture was still upheld.[/p]
[br]

[p]The project was actually delayed for almost half a year before it was picked up again, and by the time it did, I was taken off of working on what I initially contributed to. Instead, I worked on a different part of Curation Cloud called the [b][color=##4169e1]Case Management System[/color][/b]. This was just a system to keep track of a the progress of a case. Curators can claim a case, ask for help on it, view its current progress, add notes, and link new analyses to that case. The tech stack for this application, like FLIMS, utilized Node.js, Express.js, Vue.js, and Oracle SQL Developer. For message queues, RabbitMQ was used and PM2 for process management.[/p]
[br]

[h3][b]BTS[/b][/h3]
[p]BTS, or Back-to-School, is an online platform that allows students and employees to upload COVID-19 vaccine records and for employers to track compliance. After its deployment, it has served over 1000 schools and other institutions, clinics, drive-sites, counties, hospitals, and more. There were two parts of the system that I worked on alongside members of a team (at that time called the Strike Team): the Residence Creation application and the Residence Admin application.[/p]
[br]

[list]
    [*] The [b][color=#664C90]Residence Creation[/color][/b] application allowed users to create an account and subsequently upload their vaccination records for COVID-19.[/*] 
    [*] The [b][color=#664C90]Residence Admin[/color][/b] application was the dashboard that employers or supervisors can log into and manage their employees and check to see if they are compliant.[/*] 
    [*] A third application called the [b][color=#664C90]Residence Appointment[/color][/b] application gave users the ability to set up an appointment at a registered site to get tested for COVID-19. I did not work on this one.[/*] 
[/list]
[br]

[p]Over two weeks, I completed tasks for both applications, added/modified/removed features, fixed bugs, and communicated with the Q/A team to see if the system was working properly. Additionally, I helped make a few improvements to the emailing system. It was stressful because we had to pull overtime and work on weekends for 2 weeks to prepare the system for deployment before the deadline. However, this experience was invaluable because I and my fellow team members had to work to deliver what was needed in a stressful and pressuring environment.[/p]
[br]

[p]This system itself was significant to L.A. county because it helped combat COVID-19 and manage employees at the time when vaccination was enforced. What made it even more important was that the deployment of the system occurred at the same time as when the delta variant was causing spikes in the rates of the virus.[/p]
[br]

[p][b](1) Screenshot of the Residence Admin landing page[/b][/p]
[p][url=https://backtowork.fulgentgenetics.com/ushealthfairs/residence_admin]https://backtowork.fulgentgenetics.com/ushealthfairs/residence_admin[/url][/p]
[br]
[img]/projectdetailimages/work_fulgentgenetics_residenceadmin.png[/img]
[br]

[p][b](2) Screenshot of the Residence Appointment application[/b][/p]
[p][url=https://lac.fulgentgenetics.com/residence_appointment/screen/landing]https://lac.fulgentgenetics.com/residence_appointment/screen/landing[/url][/p]
[br]
[img]/projectdetailimages/work_fulgentgenetics_residenceappt.png[/img]
[br]

[h3][b]OpenArray[/b][/h3]
[p]Fulgent Genetics wanted to integrate an additional panel to their large range of services called the [b][color=#800000]Respiratory Pathogen Panel[/color][/b]. It was the company's take on testing for multi-pathogens; they wanted to branch and offer more services. OpenArray itself is a technology on the QuantStudio 12K Real-Time PCR System, and the company wanted to use this device to offer this kind of testing service.[/p]
[br]

[p]I worked with two team leads in order to integrate this new panel. Our tasks were to understand the standard operating procedures that lab techs had to follow in order to extract samples and run PCR on them using these machines. We had to understand what output we were getting and how to transform that data so that it could be used in FLIMS. This meant that the leads and I had to visit the lab in person, shadow lab techs, discuss with other department leads, and design a solution so that this new panel can be integrated. After doing so, we implemented what we designed, made the proper code additions and changes, and performed multiple dry-runs to make sure the data came out as expected. After performing a wet-run and validating that the new integration was working, we deployed it as a new product line.[/p]
[br]

[p]To be specific but also not going into detail, the implentation included:[/p]
[list]
    [*]The creation of three Vue pages and any necessary components[/*]
    [*]Declaring new identifiers[/*]
    [*]Addition of records to several tables in Oracle SQL Developer[/*]
    [*]Modifications to server-side code and writing new APIs[/*]
    [*]Writing new background processes[/*]
[/list]
[br]

[p]The reason why this experience was so important to me was because it exposed me to [u]coordination and communication across departments[/u]. Every department had its own focus, its own concerns, and its own perspective on what needs to be done in order to integrated this new panel. Discussing this with them and understanding those constraints were crucial to getting this entire thing to work. Lack of communication would be detrimental and developing on assumptions could be harmful to the product and the company. Visiting the lab in person and getting the opinions of lab techs also helped build the user interface for the frontend pages and helped improve the user experience.[/p]
[br]

[p][b](1) Screenshot of the Respiratory Pathogen Panel (RPP) on Fulgent Genetic's website[/b][/p]
[p][url=https://www.fulgentgenetics.com/infectiousdisease/rpp]Link: https://www.fulgentgenetics.com/infectiousdisease/rpp[/url][/p]
[br]
[img]/projectdetailimages/work_fulgentgenetics_rpp.png[/img]
[br]

[p][b](2) The QuanStudio 12K Real[/b][/p]
[p][url=https://www.thermofisher.com/us/en/home/life-science/pcr/real-time-pcr/real-time-openarray.html]https://www.thermofisher.com/us/en/home/life-science/pcr/real-time-pcr/real-time-openarray.html[/url][/p]
[br]
[img]/projectdetailimages/work_fulgentgenetics_quantstudio.png[/img]
[br]

[h3][b]Regression Testing System[/b][/h3]
[p]The regression system was used to test workflows that occur in FLIMS, the internal management system. The testing framework was internal and written by a team lead. I helped write test cases and test suites that conformed to the style and conventions of the internal testing framework. One significant test was the "full-run" test, which was an integration test. It tested that the sample was received, accessioned, that data entry was done for a test, that the sample was extracted, a library was prepped, and an ngs run was done.[/p]
[br]

[p]The regression system provided a way to test for any faults in the system, which was crucial to [b]system reliability[/b] and uptime especially because multiple members of the team were pushing code every day of the week. The system was run every night to make sure these modifications weren't breaking changes. If they were, it would alert the team and help them to resolve the issue.[/p]
[br]
